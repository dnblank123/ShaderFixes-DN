// fs_default
//
// Generated by Microsoft (R) HLSL Shader Compiler 10.0.10011.16384
//
//
// Buffer Definitions: 
//
// cbuffer cb0
// {
//
//   float4 cb0[69];                    // Offset:    0 Size:  1104
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// s0_s                              sampler      NA          NA             s0      1 
// s6_s                              sampler      NA          NA             s6      1 
// t0                                texture  float4          2d             t0      1 
// t6                                texture  float4          2d             t6      1 
// cb0                               cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// CLIPDISTANCE             0   x           1     NONE   float   x   
// TEXCOORD                 7    yzw        1     NONE   float       
// DEPTHVALUE               0   x           2     NONE   float   x   
// TEXCOORD                 0    yz         2     NONE   float    yz 
// FOGFACTOR                0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 6   xyzw        4     NONE   float       
// TEXCOORD                 4   xyz         5     NONE   float       
// WORLDVIEWNORMAL          0   xyz         6     NONE   float   xyz 
// WORLDVIEWPOSITION        0   xyz         7     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[69], dynamicIndexed
dcl_sampler s0, mode_default
dcl_sampler s6, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t6
dcl_input_ps linear v1.x
dcl_input_ps linear v2.x
dcl_input_ps linear v2.yz
dcl_input_ps linear v3.xyzw
dcl_input_ps linear v6.xyz
dcl_input_ps linear v7.xyz
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 5
lt r0.x, v1.x, l(0.000000)
discard_nz r0.x
dp3 r0.x, -v7.xyzx, -v7.xyzx
rsq r0.x, r0.x
mul r0.yzw, r0.xxxx, -v7.xxyz
dp3_sat r0.y, v6.xyzx, r0.yzwy
mad r0.xzw, -v7.xxyz, r0.xxxx, -cb0[27].xxyz
dp3 r1.x, r0.xzwx, r0.xzwx
rsq r1.x, r1.x
mul r0.xzw, r0.xxzw, r1.xxxx
dp3 r1.x, v6.xyzx, -cb0[27].xyzx
add r1.x, r1.x, cb0[25].x
add r1.y, l(1.000000), cb0[25].x
div_sat r1.x, r1.x, r1.y
dp3_sat r0.x, -cb0[27].xyzx, r0.xzwx
mul r0.x, r0.x, r0.x
dp2 r0.x, r0.xxxx, cb0[25].yyyy
add r0.x, r0.x, l(-0.500000)
add r0.z, -r1.x, l(1.000000)
mul r0.w, r0.z, r0.z
mul r0.w, r0.w, r0.w
mul r0.z, r0.w, r0.z
mad r0.z, r0.x, r0.z, l(1.000000)
add r0.y, -r0.y, l(1.000000)
mul r0.w, r0.y, r0.y
mul r0.w, r0.w, r0.w
mul r0.y, r0.w, r0.y
mad r0.x, r0.x, r0.y, l(1.000000)
mul r0.yzw, r0.zzzz, cb0[32].xxyz
mul r0.xyz, r0.xxxx, r0.yzwy
mul r0.xyz, r1.xxxx, r0.xyzx
round_z r1.xy, cb0[26].yzyy
ftoi r1.xy, r1.xyxx
mov r2.xyz, r0.xyzx
mov r0.w, l(0)
loop 
  ftoi r1.z, r0.w
  ilt r1.w, r1.z, r1.x
  if_z r1.w
    break 
  endif 
  add r3.xy, r0.wwww, l(37.000000, 42.000000, 0.000000, 0.000000)
  ftou r3.xy, r3.xyxx
  add r4.xyz, -v7.xyzx, cb0[r3.x + 0].xyzx
  dp3 r1.w, r4.xyzx, r4.xyzx
  sqrt r1.w, r1.w
  mad r2.w, -cb0[r3.x + 0].w, r1.w, l(1.000000)
  max r2.w, r2.w, l(0.000000)
  div r3.xzw, r4.xxyz, r1.wwww
  dp3_sat r1.w, v6.xyzx, r3.xzwx
  mul r3.xyz, r1.wwww, cb0[r3.y + 0].xyzx
  mad r2.xyz, r3.xyzx, r2.wwww, r2.xyzx
  iadd r1.z, r1.z, l(1)
  itof r0.w, r1.z
endloop 
mov r0.xyz, r2.xyzx
mov r0.w, l(0)
loop 
  ftoi r1.x, r0.w
  ilt r1.z, r1.x, r1.y
  if_z r1.z
    break 
  endif 
  add r1.zw, r0.wwww, l(0.000000, 0.000000, 52.000000, 57.000000)
  ftou r1.zw, r1.zzzw
  add r3.xyz, -v7.xyzx, cb0[r1.z + 0].xyzx
  dp3 r2.w, r3.xyzx, r3.xyzx
  sqrt r2.w, r2.w
  div r3.xyz, r3.xyzx, r2.wwww
  ge r1.z, cb0[r1.z + 0].w, r2.w
  if_nz r1.z
    add r4.xyz, r0.wwww, l(47.000000, 62.000000, 57.000000, 0.000000)
    ftou r4.xyz, r4.xyzx
    dp3 r1.z, -cb0[r4.x + 0].xyzx, r3.xyzx
    add r1.z, r1.z, -cb0[r4.y + 0].w
    div_sat r1.z, r1.z, cb0[r4.z + 0].w
    log r1.z, r1.z
    mul r1.z, r1.z, cb0[r4.x + 0].w
    exp r1.z, r1.z
  else 
    mov r1.z, l(0)
  endif 
  dp3 r2.w, v6.xyzx, r3.xyzx
  max r2.w, r2.w, l(0.000000)
  mul r3.xyz, r2.wwww, cb0[r1.w + 0].xyzx
  mad r0.xyz, r3.xyzx, r1.zzzz, r0.xyzx
  iadd r1.x, r1.x, l(1)
  itof r0.w, r1.x
endloop 
sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v2.yzyy, t0.xyzw, s0
lt r0.w, r1.w, cb0[0].x
discard_nz r0.w
mul r2.xyz, cb0[24].xyzx, cb0[67].xyzx
mad r0.xyz, cb0[68].xyzx, r0.xyzx, r2.xyzx
mul o0.w, r1.w, cb0[67].w
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v3.xyxx, t6.xyzw, s6
add r2.xyz, r2.xyzx, -cb0[1].xyzx
mad r2.xyz, r2.xyzx, v3.wwww, cb0[1].xyzx
mad r0.xyz, r1.xyzx, r0.xyzx, -r2.xyzx
mad o0.xyz, v3.zzzz, r0.xyzx, r2.xyzx
mov o1.x, v2.x
mov o1.yzw, l(0,0,0,0)
ret 
// Approximately 103 instruction slots used
