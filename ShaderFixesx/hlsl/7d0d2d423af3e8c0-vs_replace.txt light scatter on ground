// ---- Created with 3Dmigoto v1.3.16 on Mon Jan 01 20:07:22 2024
cbuffer cb0 : register(b0)
{
  float4 cb0[13];
}




// 3Dmigoto declarations
#define cmp -
Texture1D<float4> IniParams : register(t120);


void main(
  float4 v0 : NORMAL0,
  float3 v1 : POSITION0,
  out float4 o0 : SV_POSITION0,
  out float4 o1 : COLOR0,
  out float3 o2 : TEXCOORD7,
  out float4 o3 : FOGFACTOR0,
  out float3 o4 : TEXCOORD1)
{
  float4 r0,r1,r2,r3,r4;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.xyz = cb0[4].xyz * v1.xxx;
  r1.xyz = cb0[5].xyz * v1.yyy;
  r0.xyz = r1.xyz + r0.xyz;
  r1.xyz = cb0[6].xyz * v1.zzz;
  r0.xyz = r1.xyz + r0.xyz;
  r1.xyz = float3(1,1,1) * cb0[7].xyz;
  r0.xyz = r1.xyz + r0.xyz;
  r1.xyzw = cb0[0].xyzw * r0.xxxx;
  r2.xyzw = cb0[1].xyzw * r0.yyyy;
  r1.xyzw = r2.xyzw + r1.xyzw;
  r0.xyzw = cb0[2].xyzw * r0.zzzz;
  r0.xyzw = r1.xyzw + r0.xyzw;
  r1.xyzw = float4(1,1,1,1) * cb0[3].xyzw;
  r0.xyzw = r1.zxyw + r0.zxyw;
  r1.xyz = cb0[9].xyw * r0.yyy;
  r2.xyz = cb0[10].xyw * r0.zzz;
  r1.xyz = r2.xyz + r1.xyz;
  r2.xyz = cb0[11].xyw * r0.xxx;
  r1.xyz = r2.xyz + r1.xyz;
  r2.xyz = cb0[12].xyw * r0.www;
  r1.xyz = r2.xyz + r1.xyz;
  r1.xyz = r1.xyz;
  r2.xyz = v0.xyz;
  r2.w = 1;
  r3.xy = r0.yz / r0.ww;
  r3.xy = float2(1,1) + r3.xy;
  r3.xy = float2(0.5,0.5) * r3.xy;
  r1.w = -r3.y;
  r1.w = 1 + r1.w;
  r0.x = r0.x;
  r3.y = -r0.x;
  r3.y = cb0[8].z + r3.y;
  r3.yz = cb0[8].xy * r3.yy;
  r3.yz = max(float2(0,0), r3.yz);
  r4.xz = min(float2(1,1), r3.zy);
  r4.w = r4.x * r4.x;
  r4.z = r4.z;
  r4.w = r4.w;
  r4.zw = r4.zw;
  r3.yzw = int3(0,0,0);
  o0.xyzw = r0.yzxw;
  o1.xyzw = r2.xyzw;
  o3.x = r3.x;
  o3.y = r1.w;
  o3.zw = r4.zw;
  o2.xyz = r3.yzw;
  o4.xyz = r1.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Mon Jan 01 20:07:22 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// NORMAL                   0   xyzw        0     NONE   float   xyz
// POSITION                 0   xyz         1     NONE   float   xyz
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 7   xyz         2     NONE   float   xyz
// FOGFACTOR                0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 1   xyz         4     NONE   float   xyz
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[13], immediateIndexed
dcl_input v0.xyz
dcl_input v1.xyz
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xyz
dcl_output o3.xyzw
dcl_output o4.xyz
dcl_temps 5
mul r0.xyz, v1.xxxx, cb0[4].xyzx
mul r1.xyz, v1.yyyy, cb0[5].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, v1.zzzz, cb0[6].xyzx
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyz, cb0[7].xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
add r0.xyz, r0.xyzx, r1.xyzx
mul r1.xyzw, r0.xxxx, cb0[0].xyzw
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.zzzz, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, cb0[3].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r0.xyzw, r0.zxyw, r1.zxyw
mul r1.xyz, r0.yyyy, cb0[9].xywx
mul r2.xyz, r0.zzzz, cb0[10].xywx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r0.xxxx, cb0[11].xywx
add r1.xyz, r1.xyzx, r2.xyzx
mul r2.xyz, r0.wwww, cb0[12].xywx
add r1.xyz, r1.xyzx, r2.xyzx
mov r1.xyz, r1.xyzx
mov r2.xyz, v0.xyzx
mov r2.w, l(1.000000)
div r3.xy, r0.yzyy, r0.wwww
add r3.xy, r3.xyxx, l(1.000000, 1.000000, 0.000000, 0.000000)
mul r3.xy, r3.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)
mov r1.w, -r3.y
add r1.w, r1.w, l(1.000000)
mov r0.x, r0.x
mov r3.y, -r0.x
add r3.y, r3.y, cb0[8].z
mul r3.yz, r3.yyyy, cb0[8].xxyx
max r3.yz, r3.yyzy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r4.xz, r3.zzyz, l(1.000000, 0.000000, 1.000000, 0.000000)
mul r4.w, r4.x, r4.x
mov r4.z, r4.z
mov r4.w, r4.w
mov r4.zw, r4.zzzw
itof r3.yzw, l(0, 1, 0, 0)
mov o0.xyzw, r0.yzxw
mov o1.xyzw, r2.xyzw
mov o3.x, r3.x
mov o3.y, r1.w
mov o3.zw, r4.zzzw
mov o2.xyz, r3.yzwy
mov o4.xyz, r1.xyzx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
