// ---- Created with 3Dmigoto v1.3.16 on Tue Jan 09 22:57:00 2024
cbuffer cb0 : register(b0)
{
  float4 cb0[142];
}




// 3Dmigoto declarations
#define cmp -


void main(
  int4 v0 : BLENDINDICES0,
  float4 v1 : NORMAL0,
  float3 v2 : POSITION0,
  float2 v3 : TEXCOORD0,
  float4 v4 : BLENDWEIGHT0,
  out float4 o0 : SV_POSITION0,
  out float o1 : CLIPDISTANCE0,
  out float3 p1 : TEXCOORD7,
  out float o2 : DEPTHVALUE0,
  out float2 p2 : TEXCOORD0,
  out float4 o3 : FOGFACTOR0,
  out float4 o4 : TEXCOORD6,
  out float4 o5 : TEXCOORD2,
  out float3 o6 : TEXCOORD4,
  out float3 o7 : WORLDVIEWNORMAL0,
  out float3 o8 : WORLDVIEWPOSITION0)
{
  float4 r0,r1,r2,r3,r4,r5,r6,r7,r8,r9,r10;
  uint4 bitmask, uiDest;
  float4 fDest;

  r0.x = cb0[8].x;
  r0.y = cb0[9].x;
  r0.z = cb0[10].x;
  r0.w = cb0[11].x;
  r1.x = cb0[8].y;
  r1.y = cb0[9].y;
  r1.z = cb0[10].y;
  r1.w = cb0[11].y;
  r2.x = cb0[8].z;
  r2.y = cb0[9].z;
  r2.z = cb0[10].z;
  r2.w = cb0[11].z;
  r3.x = cb0[8].w;
  r3.y = cb0[9].w;
  r3.z = cb0[10].w;
  r3.w = cb0[11].w;
  r4.x = cb0[136].x;
  r4.y = cb0[137].x;
  r4.z = cb0[138].x;
  r4.w = cb0[139].x;
  r5.x = cb0[136].y;
  r5.y = cb0[137].y;
  r5.z = cb0[138].y;
  r5.w = cb0[139].y;
  r6.x = cb0[136].z;
  r6.y = cb0[137].z;
  r6.z = cb0[138].z;
  r6.w = cb0[139].z;
  r7.xyz = int3(1,0,0);
  r8.xyz = v2.xyz;
  r8.w = 1;
  r9.x = dot(r4.xyzw, r8.xyzw);
  r9.y = dot(r5.xyzw, r8.xyzw);
  r9.z = dot(r6.xyzw, r8.xyzw);
  r10.w = 0;
  r10.xyz = v1.xyz;
  r4.x = dot(r4.xyzw, r10.xyzw);
  r4.y = dot(r5.xyzw, r10.xyzw);
  r4.z = dot(r6.xyzw, r10.xyzw);
  r5.xyzw = cb0[4].xyzw * r9.xxxx;
  r6.xyzw = cb0[5].xyzw * r9.yyyy;
  r5.xyzw = r6.xyzw + r5.xyzw;
  r6.xyzw = cb0[6].xyzw * r9.zzzz;
  r5.xyzw = r6.xyzw + r5.xyzw;
  r6.xyzw = float4(1,1,1,1) * cb0[7].xyzw;
  r5.xyzw = r6.zxyw + r5.zxyw;
  r0.x = dot(r0.xyzw, r8.xyzw);
  r0.y = dot(r1.xyzw, r8.xyzw);
  r0.z = dot(r2.xyzw, r8.xyzw);
  r0.w = dot(r3.xyzw, r8.xyzw);
  r1.x = dot(r0.xyzw, cb0[140].xyzw);
  r0.xyz = r0.xyz;
  r1.yz = v3.xy;
  r1.w = dot(r9.xyz, r9.xyz);
  r1.w = rsqrt(r1.w);
  r2.xyz = r9.xyz * r1.www;
  r1.w = dot(r2.xyz, r4.xyz);
  r1.w = r1.w + r1.w;
  r1.w = -r1.w;
  r3.xyz = r4.xyz * r1.www;
  r2.xyz = r3.xyz + r2.xyz;
  r3.xyzw = cb0[0].xyzw * r2.xxxx;
  r6.xyzw = cb0[1].xyzw * r2.yyyy;
  r3.xyzw = r6.xyzw + r3.xyzw;
  r2.xyzw = cb0[2].xyzw * r2.zzzz;
  r2.xyzw = r3.xyzw + r2.xyzw;
  r1.w = dot(r2.xyzw, r2.xyzw);
  r1.w = rsqrt(r1.w);
  r2.xyz = r2.xyz * r1.www;
  r1.w = 0.5 * r2.y;
  r1.w = -r1.w;
  r1.w = 0.5 + r1.w;
  r2.yw = r5.yz / r5.ww;
  r3.xy = int2(1,1);
  r2.yw = r3.xy + r2.yw;
  r2.yw = float2(0.5,0.5) * r2.yw;
  r2.w = -r2.w;
  r2.w = 1 + r2.w;
  r5.x = r5.x;
  r3.x = -r5.x;
  r3.x = cb0[141].z + r3.x;
  r3.xy = cb0[141].xy * r3.xx;
  r3.xy = max(float2(0,0), r3.xy);
  r3.xz = min(float2(1,1), r3.yx);
  r3.w = r3.x * r3.x;
  r3.z = r3.z;
  r3.w = r3.w;
  r3.zw = r3.zw;
  r5.x = r5.x;
  r3.x = 0.00999999978 * r5.x;
  r3.x = r3.x;
  r0.xyz = r0.xyz;
  r0.w = r5.x;
  o0.xyzw = r5.yzxw;
  o1.x = r1.x;
  p1.xyz = r7.xyz;
  o3.x = r2.y;
  o3.y = r2.w;
  o3.zw = r3.zw;
  o4.xyzw = r0.xyzw;
  o2.x = r3.x;
  p2.xy = r1.yz;
  o5.xz = 0;
  o5.y = r1.w;
  o6.xyz = r0.xyz;
  o7.xyz = r4.xyz;
  o8.xyz = r9.xyz;
  return;
}

/*~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Tue Jan 09 22:57:00 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// BLENDINDICES             0   xyzw        0     NONE     int
// NORMAL                   0   xyzw        1     NONE   float   xyz
// POSITION                 0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xy          3     NONE   float   xy
// BLENDWEIGHT              0   xyzw        4     NONE   float
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// CLIPDISTANCE             0   x           1     NONE   float   x
// TEXCOORD                 7    yzw        1     NONE   float    yzw
// DEPTHVALUE               0   x           2     NONE   float   x
// TEXCOORD                 0    yz         2     NONE   float    yz
// FOGFACTOR                0   xyzw        3     NONE   float   xyzw
// TEXCOORD                 6   xyzw        4     NONE   float   xyzw
// TEXCOORD                 2   xyz         5     NONE   float   xyz
// TEXCOORD                 4   xyz         6     NONE   float   xyz
// WORLDVIEWNORMAL          0   xyz         7     NONE   float   xyz
// WORLDVIEWPOSITION        0   xyz         8     NONE   float   xyz
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer cb0[142], immediateIndexed
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.x
dcl_output o1.yzw
dcl_output o2.x
dcl_output o2.yz
dcl_output o3.xyzw
dcl_output o4.xyzw
dcl_output o5.xyz
dcl_output o6.xyz
dcl_output o7.xyz
dcl_output o8.xyz
dcl_temps 11
mov r0.x, cb0[8].x
mov r0.y, cb0[9].x
mov r0.z, cb0[10].x
mov r0.w, cb0[11].x
mov r1.x, cb0[8].y
mov r1.y, cb0[9].y
mov r1.z, cb0[10].y
mov r1.w, cb0[11].y
mov r2.x, cb0[8].z
mov r2.y, cb0[9].z
mov r2.z, cb0[10].z
mov r2.w, cb0[11].z
mov r3.x, cb0[8].w
mov r3.y, cb0[9].w
mov r3.z, cb0[10].w
mov r3.w, cb0[11].w
mov r4.x, cb0[136].x
mov r4.y, cb0[137].x
mov r4.z, cb0[138].x
mov r4.w, cb0[139].x
mov r5.x, cb0[136].y
mov r5.y, cb0[137].y
mov r5.z, cb0[138].y
mov r5.w, cb0[139].y
mov r6.x, cb0[136].z
mov r6.y, cb0[137].z
mov r6.z, cb0[138].z
mov r6.w, cb0[139].z
itof r7.xyz, l(1, 0, 0, 0)
mov r8.xyz, v2.xyzx
mov r8.w, l(1.000000)
dp4 r9.x, r4.xyzw, r8.xyzw
dp4 r9.y, r5.xyzw, r8.xyzw
dp4 r9.z, r6.xyzw, r8.xyzw
itof r10.w, l(0)
mov r10.xyz, v1.xyzx
dp4 r4.x, r4.xyzw, r10.xyzw
dp4 r4.y, r5.xyzw, r10.xyzw
dp4 r4.z, r6.xyzw, r10.xyzw
mul r5.xyzw, r9.xxxx, cb0[4].xyzw
mul r6.xyzw, r9.yyyy, cb0[5].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r9.zzzz, cb0[6].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, cb0[7].xyzw, l(1.000000, 1.000000, 1.000000, 1.000000)
add r5.xyzw, r5.zxyw, r6.zxyw
dp4 r0.x, r0.xyzw, r8.xyzw
dp4 r0.y, r1.xyzw, r8.xyzw
dp4 r0.z, r2.xyzw, r8.xyzw
dp4 r0.w, r3.xyzw, r8.xyzw
dp4 r1.x, r0.xyzw, cb0[140].xyzw
mov r0.xyz, r0.xyzx
mov r1.yz, v3.xxyx
dp3 r1.w, r9.xyzx, r9.xyzx
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r9.xyzx
dp3 r1.w, r2.xyzx, r4.xyzx
add r1.w, r1.w, r1.w
mov r1.w, -r1.w
mul r3.xyz, r1.wwww, r4.xyzx
add r2.xyz, r2.xyzx, r3.xyzx
mul r3.xyzw, r2.xxxx, cb0[0].xyzw
mul r6.xyzw, r2.yyyy, cb0[1].xyzw
add r3.xyzw, r3.xyzw, r6.xyzw
mul r2.xyzw, r2.zzzz, cb0[2].xyzw
add r2.xyzw, r2.xyzw, r3.xyzw
dp4 r1.w, r2.xyzw, r2.xyzw
rsq r1.w, r1.w
mul r2.xyz, r1.wwww, r2.xyzx
mul r1.w, r2.y, l(0.500000)
mov r1.w, -r1.w
add r1.w, r1.w, l(0.500000)
div r2.yw, r5.yyyz, r5.wwww
itof r3.xy, l(1, 1, 0, 0)
add r2.yw, r2.yyyw, r3.xxxy
mul r2.yw, r2.yyyw, l(0.000000, 0.500000, 0.000000, 0.500000)
mov r2.w, -r2.w
add r2.w, r2.w, l(1.000000)
mov r5.x, r5.x
mov r3.x, -r5.x
add r3.x, r3.x, cb0[141].z
mul r3.xy, r3.xxxx, cb0[141].xyxx
max r3.xy, r3.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
min r3.xz, r3.yyxy, l(1.000000, 0.000000, 1.000000, 0.000000)
mul r3.w, r3.x, r3.x
mov r3.z, r3.z
mov r3.w, r3.w
mov r3.zw, r3.zzzw
mov r5.x, r5.x
mul r3.x, r5.x, l(0.010000)
mov r3.x, r3.x
mov r0.xyz, r0.xyzx
mov r0.w, r5.x
mov o0.xyzw, r5.yzxw
mov o1.x, r1.x
mov o1.yzw, r7.xxyz
mov o3.x, r2.y
mov o3.y, r2.w
mov o3.zw, r3.zzzw
mov o4.xyzw, r0.xyzw
mov o2.x, r3.x
mov o2.yz, r1.yyzy
mov o5.xz, r2.xxzx
mov o5.y, r1.w
mov o6.xyz, r0.xyzx
mov o7.xyz, r4.xyzx
mov o8.xyz, r9.xyzx
ret
// Approximately 0 instruction slots used

//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/
