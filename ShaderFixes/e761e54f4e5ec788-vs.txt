// // vs shadow ani
 // int4 v0 : BLENDINDICES0,
 // float4 v1 : NORMAL0,
 // float3 v2 : POSITION0,
 // float2 v3 : TEXCOORD0,
 // float4 v4 : BLENDWEIGHT0,
 // out float4 o0 : SV_POSITION0,
 // out float4 o1 : TEXCOORD6,
 // out float2 o2 : TEXCOORD0)
//
// Generated by Microsoft (R) D3D Shader Disassembler
//
//   using 3Dmigoto v1.3.16 on Sat Sep 14 01:13:54 2024
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// BLENDINDICES             0   xyzw        0     NONE     int   xyzw
// NORMAL                   0   xyzw        1     NONE   float   xyz
// POSITION                 0   xyz         2     NONE   float   xyz
// TEXCOORD                 0   xy          3     NONE   float   xy
// BLENDWEIGHT              0   xyzw        4     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// TEXCOORD                 6   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[525], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyz
dcl_input v2.xyz
dcl_input v3.xy
dcl_input v4.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_temps 9
mov r0.xyzw, v4.xyzw
imul null, r1.x, v0.x, l(4)
mul r2.x, r0.x, cb0[r1.x + 12].x
mul r2.y, r0.x, cb0[r1.x + 13].x
mul r2.z, r0.x, cb0[r1.x + 14].x
mul r2.w, r0.x, cb0[r1.x + 15].x
mul r3.x, r0.x, cb0[r1.x + 12].y
mul r3.y, r0.x, cb0[r1.x + 13].y
mul r3.z, r0.x, cb0[r1.x + 14].y
mul r3.w, r0.x, cb0[r1.x + 15].y
mul r4.x, r0.x, cb0[r1.x + 12].z
mul r4.y, r0.x, cb0[r1.x + 13].z
mul r4.z, r0.x, cb0[r1.x + 14].z
mul r4.w, r0.x, cb0[r1.x + 15].z
mul r5.x, r0.x, cb0[r1.x + 12].w
mul r5.y, r0.x, cb0[r1.x + 13].w
mul r5.z, r0.x, cb0[r1.x + 14].w
mul r5.w, r0.x, cb0[r1.x + 15].w
imul null, r0.x, v0.y, l(4)
mul r1.x, r0.y, cb0[r0.x + 12].x
mul r1.y, r0.y, cb0[r0.x + 13].x
mul r1.z, r0.y, cb0[r0.x + 14].x
mul r1.w, r0.y, cb0[r0.x + 15].x
mul r6.x, r0.y, cb0[r0.x + 12].y
mul r6.y, r0.y, cb0[r0.x + 13].y
mul r6.z, r0.y, cb0[r0.x + 14].y
mul r6.w, r0.y, cb0[r0.x + 15].y
mul r7.x, r0.y, cb0[r0.x + 12].z
mul r7.y, r0.y, cb0[r0.x + 13].z
mul r7.z, r0.y, cb0[r0.x + 14].z
mul r7.w, r0.y, cb0[r0.x + 15].z
mul r8.x, r0.y, cb0[r0.x + 12].w
mul r8.y, r0.y, cb0[r0.x + 13].w
mul r8.z, r0.y, cb0[r0.x + 14].w
mul r8.w, r0.y, cb0[r0.x + 15].w
add r1.xyzw, r1.xyzw, r2.xyzw
add r2.xyzw, r3.xyzw, r6.xyzw
add r3.xyzw, r4.xyzw, r7.xyzw
add r4.xyzw, r5.xyzw, r8.xyzw
imul null, r0.x, v0.z, l(4)
mul r5.x, r0.z, cb0[r0.x + 12].x
mul r5.y, r0.z, cb0[r0.x + 13].x
mul r5.z, r0.z, cb0[r0.x + 14].x
mul r5.w, r0.z, cb0[r0.x + 15].x
mul r6.x, r0.z, cb0[r0.x + 12].y
mul r6.y, r0.z, cb0[r0.x + 13].y
mul r6.z, r0.z, cb0[r0.x + 14].y
mul r6.w, r0.z, cb0[r0.x + 15].y
mul r7.x, r0.z, cb0[r0.x + 12].z
mul r7.y, r0.z, cb0[r0.x + 13].z
mul r7.z, r0.z, cb0[r0.x + 14].z
mul r7.w, r0.z, cb0[r0.x + 15].z
mul r8.x, r0.z, cb0[r0.x + 12].w
mul r8.y, r0.z, cb0[r0.x + 13].w
mul r8.z, r0.z, cb0[r0.x + 14].w
mul r8.w, r0.z, cb0[r0.x + 15].w
add r1.xyzw, r1.xyzw, r5.xyzw
add r2.xyzw, r2.xyzw, r6.xyzw
add r3.xyzw, r3.xyzw, r7.xyzw
add r4.xyzw, r4.xyzw, r8.xyzw
imul null, r0.x, v0.w, l(4)
mul r5.x, r0.w, cb0[r0.x + 12].x
mul r5.y, r0.w, cb0[r0.x + 13].x
mul r5.z, r0.w, cb0[r0.x + 14].x
mul r5.w, r0.w, cb0[r0.x + 15].x
mul r6.x, r0.w, cb0[r0.x + 12].y
mul r6.y, r0.w, cb0[r0.x + 13].y
mul r6.z, r0.w, cb0[r0.x + 14].y
mul r6.w, r0.w, cb0[r0.x + 15].y
mul r7.x, r0.w, cb0[r0.x + 12].z
mul r7.y, r0.w, cb0[r0.x + 13].z
mul r7.z, r0.w, cb0[r0.x + 14].z
mul r7.w, r0.w, cb0[r0.x + 15].z
mul r8.x, r0.w, cb0[r0.x + 12].w
mul r8.y, r0.w, cb0[r0.x + 13].w
mul r8.z, r0.w, cb0[r0.x + 14].w
mul r8.w, r0.w, cb0[r0.x + 15].w
add r0.xyzw, r1.xyzw, r5.xyzw
add r1.xyzw, r2.xyzw, r6.xyzw
add r2.xyzw, r3.xyzw, r7.xyzw
add r3.xyzw, r4.xyzw, r8.xyzw
// mov r0.x, r0.x
// mov r0.y, r0.y
// mov r0.z, r0.z
// mov r0.w, r0.w
// mov r1.x, r1.x
// mov r1.y, r1.y
// mov r1.z, r1.z
// mov r1.w, r1.w
// mov r2.x, r2.x
// mov r2.y, r2.y
// mov r2.z, r2.z
// mov r2.w, r2.w
// mov r3.xyzw, r3.xyzw
mul r4.xyzw, r0.xxxx, cb0[4].xyzw
mul r5.xyzw, r1.xxxx, cb0[5].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r2.xxxx, cb0[6].xyzw
add r4.xyzw, r4.xyzw, r5.xyzw
// mul r5.xyzw, r3.xxxx, cb0[7].xyzw
// add r4.xyzw, r4.xyzw, r5.xyzw
mul r5.xyzw, r0.yyyy, cb0[4].xyzw
mul r6.xyzw, r1.yyyy, cb0[5].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r2.yyyy, cb0[6].xyzw
add r5.xyzw, r5.xyzw, r6.xyzw
// mul r6.xyzw, r3.yyyy, cb0[7].xyzw
// add r5.xyzw, r5.xyzw, r6.xyzw
mul r6.xyzw, r0.zzzz, cb0[4].xyzw
mul r7.xyzw, r1.zzzz, cb0[5].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
mul r7.xyzw, r2.zzzz, cb0[6].xyzw
add r6.xyzw, r6.xyzw, r7.xyzw
// mul r7.xyzw, r3.zzzz, cb0[7].xyzw
// add r6.xyzw, r6.xyzw, r7.xyzw
mul r0.xyzw, r0.wwww, cb0[4].xyzw
mul r1.xyzw, r1.wwww, cb0[5].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r2.wwww, cb0[6].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r3.wwww, cb0[7].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mov r1.x, r4.x
mov r1.y, r5.x
mov r1.z, r6.x
mov r1.w, r0.x
mov r2.x, r4.y
mov r2.y, r5.y
mov r2.z, r6.y
mov r2.w, r0.y
mov r3.x, r4.z
mov r3.y, r5.z
mov r3.z, r6.z
mov r3.w, r0.z
mov r0.x, r4.w
mov r0.y, r5.w
mov r0.z, r6.w
mov r0.w, r0.w
mov r4.xyz, v2.xyzx
mov r4.w, l(1.000000)
dp4 r5.x, r1.xyzw, r4.xyzw
dp4 r5.y, r2.xyzw, r4.xyzw
dp4 r5.z, r3.xyzw, r4.xyzw
// dp4 r4.x, r0.xyzw, r4.xyzw
// itof r6.w, l(0)
// mov r6.xyz, v1.xyzx
// dp4 r1.x, r1.xyzw, r6.xyzw
// dp4 r1.y, r2.xyzw, r6.xyzw
// dp4 r1.z, r3.xyzw, r6.xyzw
// dp4 r1.w, r0.xyzw, r6.xyzw
// dp4 r0.x, r1.xyzw, r1.xyzw
// rsq r0.x, r0.x
// mul r0.xyz, r0.xxxx, r1.xyzx
// mul r0.xyz, r0.xyzx, cb0[524].xxxx
add r0.xyz, r0.xyzx, r5.xyzx
mul r1.xyzw, r0.xxxx, cb0[0].xyzw
mul r2.xyzw, r0.yyyy, cb0[1].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.zzzz, cb0[2].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
// mul r1.xyzw, r4.xxxx, cb0[3].xyzw
mov r1.xyzw, cb0[3].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
mul r1.xyzw, r0.xxxx, cb0[8].xyzw
mul r2.xyzw, r0.yyyy, cb0[9].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r2.xyzw, r0.zzzz, cb0[10].xyzw
add r1.xyzw, r1.xyzw, r2.xyzw
mul r0.xyzw, r0.wwww, cb0[11].xyzw
add r0.xyzw, r0.xyzw, r1.xyzw
// mov r1.xy, v3.xyxx
// mov r0.xyzw, r0.xyzw
mov o0.xyzw, r0.xyzw.
mov r1.z, l(-0.000163)
add o1.z, r0.z, r1.z
mov o1.xyw, r0.xyw
mov o2.xy, v3.xyxx
ret